@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;
}
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;
@*category breadcrumb*@
@if (Model.DisplayCategoryBreadcrumb)
{
    <div>
        <ol class="breadcrumb">
            <li><a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a></li>
            @foreach (var cat in Model.CategoryBreadcrumb)
            {
                var isLastCategory = cat.Id == Model.Id;

                if (isLastCategory)
                {
                    <li class="active">@cat.Name</li>
                }
                else
                {
                    <li><a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a></li>
                }

            }
        </ol>
    </div>

    @Html.Widget("categorydetails_after_breadcrumb")
}
<div class="page category-page">
    <div class="panel panel-default form-panel">
        <div class="panel-heading">
            <h3>@Model.Name</h3>
        </div>
        <div class="panel-body">
            <div class="page-body">
                @Html.Widget("categorydetails_top")
                @*description*@
                @if (!String.IsNullOrWhiteSpace(Model.Description))
                {
                    <div class="category-description">
                        @Html.Raw(Model.Description)
                    </div>
                }
                @Html.Widget("categorydetails_before_subcategories")
                @*subcategories*@
                @if (Model.SubCategories.Count > 0)
                {
                    <div class="row">
                        @foreach (var item in Model.SubCategories)
                        {
                            <div class="col-md-3">
                                            <h2 class="product-title">
                                                <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                                    @item.Name
                                                </a>
                                            </h2>
                            </div>
                        }
                    </div>
                }

                
                @Html.Widget("categorydetails_before_product_list")
                @*product list*@
                @if (Model.Products.Count > 0)
                {

                    @*grid mode*@
                    <div class="product-grid home-page-product-grid">
                        @foreach (var product in Model.Products)
                        {
                            <div class="col-md-4">
                                <div class="offer offer-default silde-show-offer pull-text-center">
                                    @Html.Partial("_ProductBoxGallery", product)
                                </div>
                            </div>
                        }
                    </div>

                }
                <div class="pager">
                    @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
                </div>
                @Html.Widget("categorydetails_bottom")
            </div>
        </div>

    </div>
</div>
